{"name": "Заказы пользователя из раздела «История заказов» отображаются на странице «Лента заказов»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (1320, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=125.0.6422.77)\nStacktrace:\n\tGetHandleVerifier [0x00007FF774AE1F52+60322]\n\t(No symbol) [0x00007FF774A5CEC9]\n\t(No symbol) [0x00007FF774917EBA]\n\t(No symbol) [0x00007FF77496F32E]\n\t(No symbol) [0x00007FF77496CCF2]\n\t(No symbol) [0x00007FF77496A18B]\n\t(No symbol) [0x00007FF774969356]\n\t(No symbol) [0x00007FF77495B491]\n\t(No symbol) [0x00007FF77498C21A]\n\t(No symbol) [0x00007FF77495ADB6]\n\t(No symbol) [0x00007FF77498C430]\n\t(No symbol) [0x00007FF7749ABC80]\n\t(No symbol) [0x00007FF77498BFC3]\n\t(No symbol) [0x00007FF774959617]\n\t(No symbol) [0x00007FF77495A211]\n\tGetHandleVerifier [0x00007FF774DF94AD+3301629]\n\tGetHandleVerifier [0x00007FF774E436D3+3605283]\n\tGetHandleVerifier [0x00007FF774E39450+3563680]\n\tGetHandleVerifier [0x00007FF774B94326+790390]\n\t(No symbol) [0x00007FF774A6750F]\n\t(No symbol) [0x00007FF774A63404]\n\t(No symbol) [0x00007FF774A63592]\n\t(No symbol) [0x00007FF774A52F9F]\n\tBaseThreadInitThunk [0x00007FFCE7387374+20]\n\tRtlUserThreadStart [0x00007FFCE92DCC91+33]", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x000001F2BF87BC50>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"35407cc2536500261b4870a8c250b4ed\")>\ncreate_order = '9999'\n\n    @allure.title('Заказы пользователя из раздела «История заказов» отображаются на странице «Лента заказов»')\n    def test_order_from_history_in_order_feed(self, driver, create_order):\n        order_feed_page = OrderFeedPage(driver)\n        lk_feed_page = LkPage(driver)\n        main_page = MainPage(driver)\n>       lk_feed_page.click_on_the_lk_button_after_registration()\n\ntests\\test_order_feed.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\lk_page.py:14: in click_on_the_lk_button_after_registration\n    lk_button.click()\n..\\..\\Sprint_6\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\Sprint_6\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\Sprint_6\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F2BF8AFEC0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF774A52F9F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFCE7387374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFCE92DCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (1320, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=125.0.6422.77)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF774AE1F52+60322]\nE       \t(No symbol) [0x00007FF774A5CEC9]\nE       \t(No symbol) [0x00007FF774917EBA]\nE       \t(No symbol) [0x00007FF77496F32E]\nE       \t(No symbol) [0x00007FF77496CCF2]\nE       \t(No symbol) [0x00007FF77496A18B]\nE       \t(No symbol) [0x00007FF774969356]\nE       \t(No symbol) [0x00007FF77495B491]\nE       \t(No symbol) [0x00007FF77498C21A]\nE       \t(No symbol) [0x00007FF77495ADB6]\nE       \t(No symbol) [0x00007FF77498C430]\nE       \t(No symbol) [0x00007FF7749ABC80]\nE       \t(No symbol) [0x00007FF77498BFC3]\nE       \t(No symbol) [0x00007FF774959617]\nE       \t(No symbol) [0x00007FF77495A211]\nE       \tGetHandleVerifier [0x00007FF774DF94AD+3301629]\nE       \tGetHandleVerifier [0x00007FF774E436D3+3605283]\nE       \tGetHandleVerifier [0x00007FF774E39450+3563680]\nE       \tGetHandleVerifier [0x00007FF774B94326+790390]\nE       \t(No symbol) [0x00007FF774A6750F]\nE       \t(No symbol) [0x00007FF774A63404]\nE       \t(No symbol) [0x00007FF774A63592]\nE       \t(No symbol) [0x00007FF774A52F9F]\nE       \tBaseThreadInitThunk [0x00007FFCE7387374+20]\nE       \tRtlUserThreadStart [0x00007FFCE92DCC91+33]\n\n..\\..\\Sprint_6\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Создаем конструктор ", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"35407cc2536500261b4870a8c250b4ed\")>"}], "start": 1728150909377, "stop": 1728150909377}, {"name": "Создаем конструктор ", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"35407cc2536500261b4870a8c250b4ed\")>"}], "start": 1728150909377, "stop": 1728150909377}, {"name": "Создаем конструктор ", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"35407cc2536500261b4870a8c250b4ed\")>"}], "start": 1728150909377, "stop": 1728150909377}, {"name": "Клик по кнопке ЛК после регистрации", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (1320, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=125.0.6422.77)\nStacktrace:\n\tGetHandleVerifier [0x00007FF774AE1F52+60322]\n\t(No symbol) [0x00007FF774A5CEC9]\n\t(No symbol) [0x00007FF774917EBA]\n\t(No symbol) [0x00007FF77496F32E]\n\t(No symbol) [0x00007FF77496CCF2]\n\t(No symbol) [0x00007FF77496A18B]\n\t(No symbol) [0x00007FF774969356]\n\t(No symbol) [0x00007FF77495B491]\n\t(No symbol) [0x00007FF77498C21A]\n\t(No symbol) [0x00007FF77495ADB6]\n\t(No symbol) [0x00007FF77498C430]\n\t(No symbol) [0x00007FF7749ABC80]\n\t(No symbol) [0x00007FF77498BFC3]\n\t(No symbol) [0x00007FF774959617]\n\t(No symbol) [0x00007FF77495A211]\n\tGetHandleVerifier [0x00007FF774DF94AD+3301629]\n\tGetHandleVerifier [0x00007FF774E436D3+3605283]\n\tGetHandleVerifier [0x00007FF774E39450+3563680]\n\tGetHandleVerifier [0x00007FF774B94326+790390]\n\t(No symbol) [0x00007FF774A6750F]\n\t(No symbol) [0x00007FF774A63404]\n\t(No symbol) [0x00007FF774A63592]\n\t(No symbol) [0x00007FF774A52F9F]\n\tBaseThreadInitThunk [0x00007FFCE7387374+20]\n\tRtlUserThreadStart [0x00007FFCE92DCC91+33]\n\n", "trace": "  File \"C:\\Users\\e.sergeev\\PycharmProjects\\Sprint_6\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\e.sergeev\\PycharmProjects\\Diplom\\Diplom_3\\pages\\lk_page.py\", line 14, in click_on_the_lk_button_after_registration\n    lk_button.click()\n  File \"C:\\Users\\e.sergeev\\PycharmProjects\\Sprint_6\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\e.sergeev\\PycharmProjects\\Sprint_6\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\e.sergeev\\PycharmProjects\\Sprint_6\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\e.sergeev\\PycharmProjects\\Sprint_6\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Ожидаем элемент на странице", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \".//p[@class='AppHeader_header__linkText__3q_va ml-2' and text()='Личный Кабинет']\")"}], "start": 1728150909377, "stop": 1728150909421}], "start": 1728150909377, "stop": 1728150910495}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1728150909376, "stop": 1728150910495, "uuid": "694ce48c-3949-4b6d-9ef5-f4ed25cbfcf3", "historyId": "1461b01612a044b7e41466d25d4e4617", "testCaseId": "3e61a5fab72fd03abb636d4db4c88364", "fullName": "tests.test_order_feed.TestOrderFeed#test_order_from_history_in_order_feed", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "0000NBB03064379"}, {"name": "thread", "value": "8612-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}